---

# Configuration tasks for haproxy

- name : Create directory to store splitted configuration
  file :
    path  : "{{ haproxy_path_prefix_etc }}/conf.d"
    state : directory


- name : Empty the folder if not already empty
  command : >
    find {{ haproxy_path_prefix_etc }}/conf.d -name *.cfg -exec rm -f {} \;


- name: Generate the global configuration
  template :
    src  : "{{ role_path }}/templates/{{ haproxy_version_number }}/global.conf.j2"
    dest : "{{ haproxy_path_prefix_etc }}/conf.d/01-global.cfg"


- name: Generate the default configuration
  template :
    src  : "{{ role_path }}/templates/{{ haproxy_version_number }}/default.conf.j2"
    dest : "{{ haproxy_path_prefix_etc }}/conf.d/02-default.cfg"
  when : haproxy_defaults


- name : Generate the frontends configuration
  template :
    src  : "{{ role_path }}/templates/{{ haproxy_version_number }}/frontends.conf.j2"
    dest : "{{ haproxy_path_prefix_etc }}/conf.d/03-frontends.cfg"
  when : haproxy_frontends


- name : Generate the backends configuration
  template :
    src  : "{{ role_path }}/templates/{{ haproxy_version_number }}/backends.conf.j2"
    dest : "{{ haproxy_path_prefix_etc }}/conf.d/04-backends.cfg"
  when : haproxy_backends


- name : Generate the listens configuration
  template :
    src  : "{{ role_path }}/templates/{{ haproxy_version_number }}/listens.conf.j2"
    dest : "{{ haproxy_path_prefix_etc }}/conf.d/05-listens.cfg"
  when : haproxy_listens


- name : Generate the userlists configuration
  template :
    src  : "{{ role_path }}/templates/{{ haproxy_version_number }}/userlists.conf.j2"
    dest : "{{ haproxy_path_prefix_etc }}/conf.d/06-userlists.cfg"
  when : haproxy_userlists


- name : Assemble the final configuration file
  assemble :
    src    : "{{ haproxy_path_prefix_etc }}/conf.d"
    dest   : "{{ config_location }}"
    backup : True
  notify : restart haproxy
